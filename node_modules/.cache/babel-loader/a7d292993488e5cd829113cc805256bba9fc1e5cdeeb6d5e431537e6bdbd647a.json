{"ast":null,"code":"var _jsxFileName = \"X:\\\\Code\\\\website\\\\React\\\\project1\\\\first\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alerts from './components/Alerts';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navArray = ['light', 'dark'];\n  const [mode, setMode] = useState(navArray);\n  const [alert, setAlert] = useState(null);\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this)\n  }]);\n  const alertFunc = (message, alertMode) => {\n    setAlert({\n      msg: message,\n      alert: alertMode\n    });\n    setTimeout(() => {\n      setAlert('null');\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode[0] === 'light') {\n      const updatedMode = ['dark', 'light'];\n      setMode(updatedMode);\n      document.body.style.backgroundColor = '#212529';\n      alertFunc('Dark mode has been activated', \"success\");\n    } else {\n      setMode(navArray);\n      document.body.style.backgroundColor = 'white';\n      alertFunc('Light mode has been activated', \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode[0],\n      toggleMode: toggleMode,\n      darkModeText: mode[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Text\",\n        col: mode[0],\n        alertFunc: alertFunc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"F6N0QjKp9raypMo9b5mr8XOHlUQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alerts","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navArray","mode","setMode","alert","setAlert","router","path","element","children","fileName","_jsxFileName","lineNumber","columnNumber","alertFunc","message","alertMode","msg","setTimeout","toggleMode","updatedMode","document","body","style","backgroundColor","title","darkModeText","className","heading","col","_c","$RefreshReg$"],"sources":["X:/Code/website/React/project1/first/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alerts from './components/Alerts';\nimport { createBrowserRouter, RouterProvider} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const navArray = ['light', 'dark']\n  const [mode, setMode] = useState(navArray);\n  const [alert, setAlert] = useState(null);\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <div>Hello world!</div>,\n    },\n  ]);\n\n  const alertFunc= (message, alertMode)=>{\n    setAlert({\n      msg: message, alert:alertMode\n    })\n    setTimeout(() => {\n      setAlert('null')\n    }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode[0] === 'light'){\n      const updatedMode = ['dark', 'light']\n      setMode(updatedMode)\n      document.body.style.backgroundColor = '#212529'\n      alertFunc('Dark mode has been activated', \"success\")\n    }\n    else{\n      setMode(navArray);\n      document.body.style.backgroundColor = 'white'\n      alertFunc('Light mode has been activated', \"success\")\n\n    }\n  }\n\n  return (\n  <>\n  <Navbar title=\"TextUtils\" mode={mode[0]} toggleMode = {toggleMode} darkModeText={mode[1]}/>\n  <Alerts alert = {alert}/>\n  <div className='container my-3'>\n\n  <TextForm heading=\"Text\" col = {mode[0]} alertFunc={alertFunc}/>\n  </div> \n  \n  </>\n  );\n}\n\n\nexport default App;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}