{"ast":null,"code":"var _jsxFileName = \"X:\\\\Code\\\\website\\\\React\\\\project1\\\\first\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport { useCallback, useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navArray = ['light', 'dark'];\n  const [mode, setMode] = useState(navArray);\n  const toggleMode = () => {\n    if (mode[0] === 'light') {\n      const updatedMode = ['dark', 'light'];\n      setMode(updatedMode);\n      document.body.style.backgroundColor;\n    } else {\n      setMode(navArray);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode[0],\n      toggleMode: toggleMode,\n      darkModeText: mode[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"LaChlimjS8DlgGjLH4RQh2W2yOg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","About","Navbar","TextForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navArray","mode","setMode","toggleMode","updatedMode","document","body","style","backgroundColor","children","title","darkModeText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["X:/Code/website/React/project1/first/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport { useCallback, useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n  const navArray = ['light', 'dark']\n  const [mode, setMode] = useState(navArray);\n\n  const toggleMode = ()=>{\n    if(mode[0] === 'light'){\n      const updatedMode = ['dark', 'light']\n      setMode(updatedMode)\n      document.body.style.backgroundColor\n    }\n    else{\n      setMode(navArray);\n    }\n  }\n\n  return (\n  <>\n  <Navbar title=\"TextUtils\" mode={mode[0]} toggleMode = {toggleMode} darkModeText={mode[1]}/>\n   <div className='container my-3'>\n    <TextForm heading=\"Text\"/>\n  </div> \n  \n  </>\n  );\n}\n\n\nexport default App;\n\n\n\n"],"mappings":";;AAAA;AACA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACU,QAAQ,CAAC;EAE1C,MAAMG,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGF,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,EAAC;MACrB,MAAMG,WAAW,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;MACrCF,OAAO,CAACE,WAAW,CAAC;MACpBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe;IACrC,CAAC,MACG;MACFN,OAAO,CAACF,QAAQ,CAAC;IACnB;EACF,CAAC;EAED,oBACAL,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA,CAACH,MAAM;MAACkB,KAAK,EAAC,WAAW;MAACT,IAAI,EAAEA,IAAI,CAAC,CAAC,CAAE;MAACE,UAAU,EAAIA,UAAW;MAACQ,YAAY,EAAEV,IAAI,CAAC,CAAC;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC1FpB,OAAA;MAAKqB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC9Bd,OAAA,CAACF,QAAQ;QAACwB,OAAO,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA,eAEJ,CAAC;AAEL;AAAChB,EAAA,CAxBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}