{"ast":null,"code":"//import logo from './logo.svg';\nimport{useState}from'react';import'./App.css';import About from'./components/About';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import Alerts from'./components/Alerts';import{BrowserRouter,Routes,Route}from\"react-router-dom\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const navArray=['light','dark'];const[mode,setMode]=useState(navArray);const[alert,setAlert]=useState(null);const alertFunc=(message,alertMode)=>{setAlert({msg:message,alert:alertMode});setTimeout(()=>{setAlert('null');},2000);};const toggleMode=()=>{if(mode[0]==='light'){const updatedMode=['dark','light'];setMode(updatedMode);document.body.style.backgroundColor='#212529';alertFunc('Dark mode has been activated',\"success\");}else{setMode(navArray);document.body.style.backgroundColor='white';alertFunc('Light mode has been activated',\"success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode:mode[0],toggleMode:toggleMode,darkModeText:mode[1]}),/*#__PURE__*/_jsx(Alerts,{alert:alert}),/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Text\",col:mode[0],alertFunc:alertFunc})})})})}),/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",element:/*#__PURE__*/_jsx(About,{})})})]})});}export default App;","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alerts","BrowserRouter","Routes","Route","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","navArray","mode","setMode","alert","setAlert","alertFunc","message","alertMode","msg","setTimeout","toggleMode","updatedMode","document","body","style","backgroundColor","children","title","darkModeText","exact","path","element","className","heading","col"],"sources":["X:/Code/website/React/project1/textutils/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alerts from './components/Alerts';\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const navArray = ['light', 'dark']\n  const [mode, setMode] = useState(navArray);\n  const [alert, setAlert] = useState(null);\n\n  \n\n  const alertFunc= (message, alertMode)=>{\n    setAlert({\n      msg: message, alert:alertMode\n    })\n    setTimeout(() => {\n      setAlert('null')\n    }, 2000);\n  }\n\n\n  const toggleMode = ()=>{\n    if(mode[0] === 'light'){\n      const updatedMode = ['dark', 'light']\n      setMode(updatedMode)\n      document.body.style.backgroundColor = '#212529'\n      alertFunc('Dark mode has been activated', \"success\")\n    }\n    else{\n      setMode(navArray);\n      document.body.style.backgroundColor = 'white'\n      alertFunc('Light mode has been activated', \"success\")\n\n    }\n  }\n\n  return (\n  <>\n  \n \n    <BrowserRouter>\n    <Navbar title=\"TextUtils\" mode={mode[0]} toggleMode = {toggleMode} darkModeText={mode[1]}/>\n\n    <Alerts alert = {alert}/>\n      <Routes>\n      <Route exact path=\"/\" element = {<><div className='container my-3'><TextForm heading=\"Text\" col = {mode[0]} alertFunc={alertFunc}/></div></>}/>\n      </Routes>\n      <Routes>\n      <Route exact path=\"/about\" element = {<About/>}/>\n      </Routes>\n    </BrowserRouter>\n  \n  \n  </>\n  );\n}\n\n\nexport default App;\n\n\n\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAI/D,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAAAC,QAAQ,CAAG,CAAC,OAAO,CAAE,MAAM,CAAC,CAClC,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAACe,QAAQ,CAAC,CAC1C,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAIxC,KAAM,CAAAoB,SAAS,CAAEA,CAACC,OAAO,CAAEC,SAAS,GAAG,CACrCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CAAEH,KAAK,CAACI,SACtB,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,MAAM,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAGD,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAI,CACrB,GAAGT,IAAI,CAAC,CAAC,CAAC,GAAK,OAAO,CAAC,CACrB,KAAM,CAAAU,WAAW,CAAG,CAAC,MAAM,CAAE,OAAO,CAAC,CACrCT,OAAO,CAACS,WAAW,CAAC,CACpBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CV,SAAS,CAAC,8BAA8B,CAAE,SAAS,CAAC,CACtD,CAAC,IACG,CACFH,OAAO,CAACF,QAAQ,CAAC,CACjBY,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CV,SAAS,CAAC,+BAA+B,CAAE,SAAS,CAAC,CAEvD,CACF,CAAC,CAED,mBACAX,IAAA,CAAAE,SAAA,EAAAoB,QAAA,cAGElB,KAAA,CAACR,aAAa,EAAA0B,QAAA,eACdtB,IAAA,CAACP,MAAM,EAAC8B,KAAK,CAAC,WAAW,CAAChB,IAAI,CAAEA,IAAI,CAAC,CAAC,CAAE,CAACS,UAAU,CAAIA,UAAW,CAACQ,YAAY,CAAEjB,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,cAE3FP,IAAA,CAACL,MAAM,EAACc,KAAK,CAAIA,KAAM,CAAC,CAAC,cACvBT,IAAA,CAACH,MAAM,EAAAyB,QAAA,cACPtB,IAAA,CAACF,KAAK,EAAC2B,KAAK,MAACC,IAAI,CAAC,GAAG,CAACC,OAAO,cAAI3B,IAAA,CAAAE,SAAA,EAAAoB,QAAA,cAAEtB,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAAN,QAAA,cAACtB,IAAA,CAACN,QAAQ,EAACmC,OAAO,CAAC,MAAM,CAACC,GAAG,CAAIvB,IAAI,CAAC,CAAC,CAAE,CAACI,SAAS,CAAEA,SAAU,CAAC,CAAC,CAAK,CAAC,CAAE,CAAE,CAAC,CAAC,CACvI,CAAC,cACTX,IAAA,CAACH,MAAM,EAAAyB,QAAA,cACPtB,IAAA,CAACF,KAAK,EAAC2B,KAAK,MAACC,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAI3B,IAAA,CAACR,KAAK,GAAC,CAAE,CAAC,CAAC,CACzC,CAAC,EACI,CAAC,CAGhB,CAAC,CAEL,CAGA,cAAe,CAAAa,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}